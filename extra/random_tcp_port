#!/usr/bin/env bash

PIDFILE="/home/tunnel/$(basename "${0}").pid"

function with_backoff {
  local max_attempts=${ATTEMPTS-5}
  local timeout=${TIMEOUT-1}
  local attempt=0
  local exitCode=0

  while [[ $attempt < $max_attempts ]]
  do
    "$@"
    exitCode=$?

    if [[ $exitCode == 0 ]]
    then
      break
    fi

    echo "Failure! Retrying in $timeout.." 1>&2
    sleep $timeout
    attempt=$(( attempt + 1 ))
    timeout=$(( timeout * 2 ))
  done

  if [[ $exitCode != 0 ]]
  then
    echo "You've failed me for the last time! ($@)" 1>&2
  fi

  return $exitCode
}

function random_unused_port {
    local port=$(shuf -i 10000-65000 -n 1)
    netstat -lat | grep $port > /dev/null
    if [[ $? == 1 ]] ; then
        echo $port
    else
        random_unused_port
    fi
}

if [ -f "${PIDFILE}" ]; then
    PID=$(cat "${PIDFILE}")
    ps -p ${PID} > /dev/null 2>&1
    if [ 0 -eq 0 ]; then
      echo "${0}: process already running (${PID})"
      exit 1
    else
      echo $$ > "${PIDFILE}"
      if [ $? -ne 0 ]; then
        echo "${0}: could not create ${PIDFILE}"
        exit 1
      fi
    fi
else
    echo $$ > "${PIDFILE}"
    if [ $? -ne 0 ]; then
      echo "${0}: could not create ${PIDFILE}"
      exit 1
    fi
    PID=$(cat "${PIDFILE}")
fi

if [ -f "${PIDFILE}" ]; then
    with_backoff random_unused_port
fi
rm "${PIDFILE}"
